// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id Int @id@default(autoincrement())
  name String
  email String @unique
  password String
  provider String@default("email")
  vocabularys Vocabulary[]
  noteGroups NoteGroup[]
  roles Role[]
  refreshToken RefreshToken?
}
model Role {
  id Int @id@default(autoincrement())
  name String @unique
  users User[]
}
model RefreshToken{
  id Int @id@default(autoincrement())
  token String@unique
  expiryDate DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int@unique
}
model NoteGroup{
  id Int @id@default(autoincrement())
  title String
  vocabularys Vocabulary[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int@unique
}
model Vocabulary {
  id Int @id@default(autoincrement())
  spelling String
  pronunciation String
  definitionMissCount Int@default(0)
  spellMissCount Int@default(0)
  examples Example[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int@unique
  noteGroup NoteGroup[]
  noteGroupIds Int[] 
}
model Example {
  id Int @id@default(autoincrement())
  definition String
  sentence Sentence[]
  vocabulary Vocabulary @relation(fields: [vocabularyId], references: [id], onDelete: Cascade) 
  vocabularyId Int@unique
}
model Sentence {
  id Int @id@default(autoincrement())
  en String
  example Example @relation(fields: [exampleId], references: [id], onDelete: Cascade) 
  exampleId Int@unique
}

